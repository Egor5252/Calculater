//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "Unit1.h"
#include <iostream>
#include <string>
#include <cmath>
#include <stack>
#include <vector>
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm1 *Form1;
//---------------------------------------------------------------------------
__fastcall TForm1::TForm1(TComponent* Owner)
	: TForm(Owner)
{
}
//---------------------------------------------------------------------------
void __fastcall TForm1::Button1Click(TObject *Sender)
{
	std::string A;
	AnsiString S;
    S = Form1->Edit1->Text;
	A = S.c_str();
	std::vector<Pair> V, V1;
	V = pairs(A);
	V1 = V;
	for (int i = 0; i < V.size(); ++i) {
		std::string SubS = A.substr(V1[0].first + 1,V1[0].second - V1[0].first - 1);
		float z = calculate(SubS);
		A = A.replace(V1[0].first, V1[0].second - V1[0].first + 1, std::to_string(z));
		V1 = pairs(A);
	}
	Form1->Edit2->Text = FloatToStr(calculate(A));
}
//---------------------------------------------------------------------------
